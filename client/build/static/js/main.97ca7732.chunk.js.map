{"version":3,"sources":["State.js","BillTable.js","BillUpload.js","BillAddForm.js","BillSearchForm.js","App.js","serviceWorker.js","index.js"],"names":["initBillTableState","data","in","out","pagination","current","pageSize","filters","sorter","query","loading","billTableState","observers","emitChange","forEach","o","observe","push","filter","t","getBillParams","orderDir","field","order","size","page","sort","handleBillTableChange","reqwest","url","method","contentType","then","success","content","total","totalElements","BillTable","columns","title","dataIndex","render","type","typeVal","width","time","timeFormat","moment","format","key","id","onClick","message","error","console","log","handleDelete","React","useState","setBillTableState","useEffect","newBillTableState","description","style","color","rowKey","record","dataSource","onChange","Dragger","Upload","BillUpload","fileList","setFileList","uploading","setUploading","props","name","multiple","accept","onRemove","file","index","indexOf","newFileList","slice","splice","beforeUpload","newFile","className","InboxOutlined","formData","FormData","append","processData","disabled","length","marginTop","href","marginLeft","layout","labelCol","span","wrapperCol","tailLayout","offset","BillAddForm","Form","useForm","form","categories","setCategories","onFinish","values","valueOf","jsonData","JSON","stringify","onFinishFailed","errorInfo","initialValues","Item","label","rules","required","placeholder","Option","value","showTime","map","c","i","min","step","precision","htmlType","margin","resetFields","BillSearchForm","get","picker","display","lineHeight","textAlign","Header","Layout","Footer","Sider","Content","App","dashed","borderColor","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"mWAMaA,EAAqB,CAC9BC,KAAM,GACNC,GAAI,EACJC,IAAK,EACLC,WAAY,CACRC,QAAS,EACTC,SAAU,IAEdC,QAAS,GACTC,OAAQ,GACRC,MAAO,GACPC,SAAS,GAGTC,EAAc,eAAOX,GAErBY,EAAY,GAEhB,SAASC,IACLD,EAAUE,SAAQ,SAACC,GAAD,OAAOA,GAAKA,EAAEJ,MAG7B,SAASK,EAAQD,GAGpB,OAFAH,EAAUK,KAAKF,GACfF,IACO,WACHD,EAAYA,EAAUM,QAAO,SAACC,GAAD,OAAOA,IAAMJ,MAIlD,IAAMK,EAAgB,SAAChB,EAAYG,EAASC,EAAQC,GAChD,IAAIY,EAAW,GAWf,OAVIb,IACIA,EAAOc,QACPD,EAAWb,EAAOc,OAED,WAAjBd,EAAOe,MACPF,GAAY,OACY,YAAjBb,EAAOe,QACdF,GAAY,UAGb,aACHG,KAAMpB,EAAWE,SACjBmB,KAAMrB,EAAWC,QAAQ,EACzBqB,KAAML,GACHZ,IAIJ,SAASkB,EAAsBvB,EAAYG,EAASC,EAAQC,IAE/DE,EAAc,eAAOA,IACNP,WAAaA,EAC5BO,EAAeH,OAASA,EACxBG,EAAeJ,QAAUA,EACzBI,EAAeD,SAAU,EACzBC,EAAeF,MAAQA,EAEvBI,IAEAe,IAAQ,CACJC,IAAK,aACLC,OAAQ,MACRC,YAAa,oCACb9B,KAAMmB,EAAchB,EAAYG,EAASC,EAAQC,KAClDuB,MAAK,SAAA/B,IACJU,EAAc,eAAOA,IACND,SAAU,EACrBT,EAAKgC,UACLtB,EAAeV,KAAOA,EAAKA,KAAKwB,KAAKS,QACrCvB,EAAeT,GAAKD,EAAKA,KAAKC,GAC9BS,EAAeR,IAAMF,EAAKA,KAAKE,IAC/BQ,EAAeP,WAAf,2BACOA,GADP,IAEI+B,MAAOlC,EAAKA,KAAKwB,KAAKW,iBAG9BvB,OC5ER,IA8GewB,EA9GG,WAEd,IAAMC,EAAU,CACZ,CACIC,MAAO,eACPC,UAAW,OACXhC,QAAQ,EACRiC,OAAQ,SAAAC,GACJ,IAAIC,EAAU,GAMd,OALa,IAATD,EACAC,EAAU,eACM,IAATD,IACPC,EAAU,gBAGV,oCACCA,IAITC,MAAO,OAEX,CACIL,MAAO,eACPC,UAAW,OACXhC,QAAQ,EACRiC,OAAQ,SAAAI,GACJ,IAAIC,EAAaC,IAAOF,GAAMG,OAAO,uBACrC,OACI,oCACEF,IAIVF,MAAO,OAEX,CACIL,MAAO,eACP/B,QAAQ,EACRgC,UAAW,gBAEf,CACID,MAAO,eACP/B,QAAQ,EACRgC,UAAW,UAEf,CACID,MAAO,eACPC,UAAW,GACXS,IAAK,IACLR,OAAQ,SAAAS,GAAE,OAAI,kBAAC,IAAD,CAAQC,QAAS,kBAiBvC,SAAsBD,GAElBtB,IAAQ,CACJC,IAAK,aAAaqB,EAAGA,GACrBpB,OAAQ,SACRG,QAAS,SAAChC,GACFA,EAAKgC,SACLmB,IAAQnB,QAAQ,4BAEhBN,EADwChB,EAAhCP,WAAgCO,EAApBJ,QAAoBI,EAAXH,SAG7B4C,IAAQC,MAAM,6BAGtBA,MAAO,WACHD,IAAQC,MAAM,+BAGtBC,QAAQC,IAAIL,GAnC6BM,CAAaN,KAApC,mBAlDF,EAsDwBO,IAAMC,SAAS1D,GAtDvC,mBAsDbW,EAtDa,KAsDGgD,EAtDH,KAwFpB,OAhCAF,IAAMG,WAAU,kBAAM5C,GAAQ,SAAC6C,GAAuBF,EAAkBE,SAExEJ,IAAMG,WAAU,WAEZjC,EADuB3B,EAAfI,cAET,IA4BC,oCACA,kBAAC,IAAD,CACIsC,KAAK,OACLoB,YACI,kEAAS,0BAAMC,MAAO,CAACC,MAAO,QAASrD,EAAeR,KAAtD,mDAAyE,0BAAM4D,MAAO,CAACC,MAAO,UAAWrD,EAAeT,IAAxH,kBAGR,kBAAC,IAAD,CACIoC,QAASA,EACT2B,OAAQ,SAAAC,GAAM,OAAIA,EAAOhB,IACzBiB,WAAYxD,EAAeV,KAC3BG,WAAYO,EAAeP,WAC3BM,QAASC,EAAeD,QACxB0D,SAvCR,SAA2BhE,EAAYG,EAASC,GAC5CmB,EAAsBvB,EAAYG,EAASC,EAAQG,EAAeF,Y,2BClElE4D,EAAYC,IAAZD,QAkFOE,EAhFI,WAAO,IAAD,EAEuBd,IAAMC,SAAS1D,GAFtC,mBAEdW,EAFc,KAEEgD,EAFF,OAGWF,IAAMC,SAAS,IAH1B,mBAGdc,EAHc,KAGJC,EAHI,OAIahB,IAAMC,UAAS,GAJ5B,mBAIdgB,EAJc,KAIHC,EAJG,KAMrBlB,IAAMG,WAAU,kBAAM5C,GAAQ,SAAC6C,GAAuBF,EAAkBE,SA+BxE,IAAMe,EAAQ,CACVC,KAAM,QACNC,UAAU,EACVC,OAAQ,OACRC,SAAU,SAAAC,GACN,IAAMC,EAAQV,EAASW,QAAQF,GAC3BG,EAAcZ,EAASa,QAC3BD,EAAYE,OAAOJ,EAAO,GAC1BT,EAAYW,IAEhBG,aAAc,SAACC,EAASJ,GAEpB,OADAX,EAAY,GAAD,mBAAKD,GAAL,YAAkBY,MACtB,GAEXZ,YAGJ,OACI,6BACI,kBAACH,EAAYO,EACT,uBAAGa,UAAU,wBACT,kBAACC,EAAA,EAAD,OAEJ,uBAAGD,UAAU,mBAAb,uGACA,uBAAGA,UAAU,mBAAb,wMAKJ,kBAAC,IAAD,CACI/C,KAAK,UACLS,QA5DZ,WACI,IAAMwC,EAAW,IAAIC,SACrBpB,EAAS1D,SAAQ,SAAAmE,GACbU,EAASE,OAAO,QAASZ,MAE7BN,GAAa,GACb/C,IAAQ,CACJC,IAAK,mBACLC,OAAQ,OACRgE,aAAa,EACb7F,KAAM0F,EACN1D,QAAS,SAAChC,IACN0E,GAAa,GACT1E,EAAKgC,UACLmB,IAAQnB,QAAQ,4BAEhBN,EAD+ChB,EAAvCP,WAAuCO,EAA3BJ,QAA2BI,EAAlBH,OAAkBG,EAAVF,OAErCgE,EAAY,KAEZrB,IAAQC,MAAM,6BAGtBA,MAAO,WACHsB,GAAa,GACbvB,IAAQC,MAAM,gCAqCd0C,SAA8B,IAApBvB,EAASwB,OACnBtF,QAASgE,EACTX,MAAO,CAAEkC,UAAW,KAEnBvB,EAAY,wBAAW,4BAE5B,uBAAGwB,KAAK,WAAWnC,MAAO,CAAEoC,WAAY,KAAxC,6C,mCC7ENC,EAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAElBE,EAAa,CACfD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAmHpBI,EA/GK,WAAO,IAAD,EAEPC,IAAKC,UAAbC,EAFe,sBAIcpD,IAAMC,SAAS,IAJ7B,mBAIfoD,EAJe,KAIHC,EAJG,OAKsBtD,IAAMC,SAAS1D,GALrC,mBAKfW,EALe,KAKCgD,EALD,KAOtBF,IAAMG,WAAU,kBAAM5C,GAAQ,SAAC6C,GAAuBF,EAAkBE,SAExEJ,IAAMG,WAAU,WACZhC,IAAQ,CACJC,IAAK,kBACLC,OAAQ,MACRY,KAAM,SACPV,MAAK,SAAA/B,GACJ8G,EAAc9G,EAAKA,WAExB,IA8BH,OACI,kBAAC,IAAD,eACI4G,KAAMA,GACFT,EAFR,CAGIvB,KAAK,cACLmC,SAjCS,SAAAC,GACbA,EAAOpE,KAAOoE,EAAOpE,KAAKqE,UAC1B,IAAIC,EAAWC,KAAKC,UAAUJ,GAC9BrF,IAAQ,CACJC,IAAK,aACLC,OAAQ,OACRC,YAAa,mBACb+D,aAAa,EACb7F,KAAMkH,EACNlF,QAAS,SAAChC,GACFA,EAAKgC,SACLmB,IAAQnB,QAAQ,4BAEhBN,EAD+ChB,EAAvCP,WAAuCO,EAA3BJ,QAA2BI,EAAlBH,OAAkBG,EAAVF,QAGrC2C,IAAQC,MAAM,6BAGtBA,MAAO,WACHD,IAAQC,MAAM,gCAelBiE,eAVe,SAAAC,GACnBjE,QAAQC,IAAI,UAAWgE,IAUnBC,cAAe,CACX,KAAQ,EACR,KAAQzE,SAGZ,kBAAC,IAAK0E,KAAN,CACIC,MAAM,2BACN7C,KAAK,OACL8C,MAAO,CAAC,CAAEC,UAAU,EAAMxE,QAAS,iDAEnC,kBAAC,IAAD,CAAQyE,YAAY,8CAChB,kBAAC,IAAOC,OAAR,CAAeC,MAAO,GAAtB,gBACA,kBAAC,IAAOD,OAAR,CAAeC,MAAO,GAAtB,kBAGR,kBAAC,IAAKN,KAAN,CACI5C,KAAK,OACL6C,MAAM,2BACNC,MAAO,CAAC,CAAEjF,KAAM,SAAUkF,UAAU,EAAMxE,QAAS,iDAEnD,kBAAC,IAAD,CAAY4E,UAAQ,EAAChF,OAAO,yBAEhC,kBAAC,IAAKyE,KAAN,CACIC,MAAM,2BACN7C,KAAK,aACL8C,MAAO,CAAC,CAAEC,UAAU,EAAMxE,QAAS,iDAEnC,kBAAC,IAAD,CAAQyE,YAAY,8CACdf,EAAWmB,KAAI,SAACC,EAAGC,GACjB,OAAQ,kBAAC,IAAOL,OAAR,CAAe7E,IAAKiF,EAAEhF,GAAI6E,MAAOG,EAAEhF,IAAKgF,EAAErD,WAI9D,kBAAC,IAAK4C,KAAN,CACI5C,KAAK,SACL6C,MAAM,2BACNC,MAAO,CAAC,CAAEC,UAAU,EAAMxE,QAAS,iDAEnC,kBAAC,IAAD,CAAagF,IAAK,EAAGC,KAAM,GAAKC,UAAW,KAE/C,kBAAC,IAAKb,KAASjB,EACX,kBAAC,IAAD,CAAQ9D,KAAK,UAAU6F,SAAS,UAAhC,4BAGA,kBAAC,IAAD,CACIxE,MAAO,CAAEyE,OAAQ,SACjBrF,QAAS,WACL0D,EAAK4B,gBAHb,mBC5GVrC,EAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAElBE,EAAa,CACfD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAqGpBoC,EAjGQ,WAAO,IAAD,EAEV/B,IAAKC,UAAbC,EAFkB,sBAIWpD,IAAMC,SAAS,IAJ1B,mBAIlBoD,EAJkB,KAINC,EAJM,OAKmBtD,IAAMC,SAAS1D,GALlC,mBAKlBW,EALkB,KAKFgD,EALE,KAOzBF,IAAMG,WAAU,kBAAM5C,GAAQ,SAAC6C,GAAuBF,EAAkBE,SAExEJ,IAAMG,WAAU,WACZhC,IAAQ,CACJC,IAAK,kBACLC,OAAQ,MACRY,KAAM,SACPV,MAAK,SAAA/B,GACJ8G,EAAc9G,EAAKA,WAExB,IAkBH,OACI,kBAAC,IAAD,eACI4G,KAAMA,GACFT,EAFR,CAGIvB,KAAK,iBACLmC,SArBS,SAAAC,GAAW,IAChB7G,EAAgCO,EAAhCP,WAAYG,EAAoBI,EAApBJ,QAASC,EAAWG,EAAXH,OACzBC,EAAK,eAAOwG,GACZxG,EAAMoC,OACNpC,EAAK,KAAWA,EAAMoC,KAAK8F,IAAI,QAC/BlI,EAAK,MAAYA,EAAMoC,KAAK8F,IAAI,SAAS,SAClClI,EAAMoC,MAEjBzC,EAAU,QAAc,EACxBuB,EAAsBvB,EAAYG,EAASC,EAAQC,IAa/C6G,eAVe,SAAAC,GACnBjE,QAAQC,IAAI,UAAWgE,MAWnB,kBAAC,IAAKE,KAAN,CACIC,MAAM,2BACN7C,KAAK,QAEL,kBAAC,IAAD,CAAQgD,YAAY,8CAChB,kBAAC,IAAOC,OAAR,CAAeC,MAAO,GAAtB,gBACA,kBAAC,IAAOD,OAAR,CAAeC,MAAO,GAAtB,kBAIR,kBAAC,IAAKN,KAAN,CACIC,MAAM,2BACN7C,KAAK,cAEL,kBAAC,IAAD,CAAQgD,YAAY,8CACdf,EAAWmB,KAAI,SAACC,EAAGC,GACjB,OAAQ,kBAAC,IAAOL,OAAR,CAAe7E,IAAKiF,EAAEhF,GAAI6E,MAAOG,EAAEhF,IAAKgF,EAAErD,WAI9D,kBAAC,IAAK4C,KAAN,CACI5C,KAAK,OACL6C,MAAM,4BAEN,kBAAC,IAAD,CAAYkB,OAAO,QAAQ5F,OAAO,aAEtC,kBAAC,IAAKyE,KAAN,CAAWC,MAAM,4BACb,kBAAC,IAAKD,KAAN,CAAW5C,KAAK,YAAYd,MAAO,CAAE8E,QAAS,iBAC1C,kBAAC,IAAD,CAAaT,IAAK,EAAGC,KAAM,GAAKC,UAAW,KAE/C,0BAAMvE,MAAO,CAAE8E,QAAS,eAAgBjG,MAAO,OAAQkG,WAAY,OAAQC,UAAW,WAAtF,KAGA,kBAAC,IAAKtB,KAAN,CAAW5C,KAAK,YAAYd,MAAO,CAAE8E,QAAS,iBAC1C,kBAAC,IAAD,CAAaT,IAAK,EAAGC,KAAM,GAAKC,UAAW,MAGnD,kBAAC,IAAKb,KAASjB,EACX,kBAAC,IAAD,CAAQ9D,KAAK,UAAU6F,SAAS,UAAhC,4BAGA,kBAAC,IAAD,CACIxE,MAAO,CAAEyE,OAAQ,SACjBrF,QAAS,WACL0D,EAAK4B,gBAHb,mBCvFRO,G,cAAmCC,IAAnCD,QAAQE,EAA2BD,IAA3BC,OAAQC,EAAmBF,IAAnBE,MAAOC,EAAYH,IAAZG,QA8BhBC,EAzBH,WAER,OACI,oCACA,kBAAC,IAAD,KACI,kBAACL,EAAD,KAAQ,yDACR,kBAAC,IAAD,KACI,kBAACI,EAAD,KACI,kBAAC,EAAD,OAEJ,kBAACD,EAAD,CAAOvG,MAAO,KACV,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAS0G,QAAQ,EAAMvF,MAAO,CAACwF,YAAa,UAC5C,kBAAC,EAAD,MACA,kBAAC,IAAD,CAASD,QAAQ,EAAMvF,MAAO,CAACwF,YAAa,UAC5C,kBAAC,EAAD,QAGR,kBAACL,EAAD,0BCtBQM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASpH,OACP,kBAAC,EAAD,MACAqH,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlI,MAAK,SAAAmI,GACJA,EAAaC,gBAEdC,OAAM,SAAAhH,GACLC,QAAQD,MAAMA,EAAMD,c","file":"static/js/main.97ca7732.chunk.js","sourcesContent":["/**\n * 全局的状态管理\n */\n\nimport reqwest from 'reqwest';\n\nexport const initBillTableState = {\n    data: [],\n    in: 0,\n    out: 0,\n    pagination: {\n        current: 1,\n        pageSize: 10\n    },\n    filters: [],\n    sorter: {},\n    query: {},\n    loading: false\n}\n\nlet billTableState = {...initBillTableState};\n\nlet observers = [];\n\nfunction emitChange() {\n    observers.forEach((o) => o && o(billTableState));\n}\n\nexport function observe(o) {\n    observers.push(o);\n    emitChange();\n    return () => {\n        observers = observers.filter((t) => t !== o)\n    }\n}\n\nconst getBillParams = (pagination, filters, sorter, query) => {\n    let orderDir = '';\n    if (sorter) {\n        if (sorter.field) {\n            orderDir = sorter.field;\n        }\n        if (sorter.order === 'ascend') {\n            orderDir += ',asc'\n        } else if (sorter.order === 'descend') {\n            orderDir += ',desc'\n        }\n    }\n    return {\n        size: pagination.pageSize,\n        page: pagination.current-1,\n        sort: orderDir,\n        ...query\n    };\n};\n\nexport function handleBillTableChange(pagination, filters, sorter, query) {\n    //billTableState = Object.assign({}, billTableState, {});\n    billTableState = {...billTableState};\n    billTableState.pagination = pagination;\n    billTableState.sorter = sorter;\n    billTableState.filters = filters;\n    billTableState.loading = true;\n    billTableState.query = query;\n\n    emitChange();\n\n    reqwest({\n        url: 'api/bills/',\n        method: 'get',\n        contentType: 'application/x-www-form-urlencoded',\n        data: getBillParams(pagination, filters, sorter, query)\n    }).then(data => {\n        billTableState = {...billTableState};\n        billTableState.loading = false;\n        if (data.success) {\n            billTableState.data = data.data.page.content;\n            billTableState.in = data.data.in;\n            billTableState.out = data.data.out;\n            billTableState.pagination = {\n                ...pagination,\n                total: data.data.page.totalElements\n            }\n        }\n        emitChange();\n    });\n}\n","import React from 'react';\n\nimport { Table, Alert, message, Button } from 'antd';\nimport moment from 'moment';\nimport reqwest from 'reqwest';\n\nimport { observe, handleBillTableChange, initBillTableState } from './State'\n\nconst BillTable = () => {\n\n    const columns = [\n        {\n            title: '类型',\n            dataIndex: 'type',\n            sorter: true,\n            render: type => {\n                let typeVal = '';\n                if (type === 1) {\n                    typeVal = '收入';\n                } else if (type === 0) {\n                    typeVal = '支出';\n                }\n                return (\n                    <>\n                    {typeVal}\n                    </>\n                )\n            },\n            width: '20%'\n        },\n        {\n            title: '时间',\n            dataIndex: 'time',\n            sorter: true,\n            render: time => {\n                let timeFormat = moment(time).format('YYYY-MM-DD HH:mm:ss');\n                return (\n                    <>\n                    { timeFormat }\n                    </>\n                )\n            },\n            width: '20%'\n        },\n        {\n            title: '类别',\n            sorter: true,\n            dataIndex: 'categoryName'\n        },\n        {\n            title: '金额',\n            sorter: true,\n            dataIndex: 'amount'\n        },\n        {\n            title: '操作',\n            dataIndex: '',\n            key: 'x',\n            render: id => <Button onClick={() => handleDelete(id)}>删除</Button>\n        }\n    ];\n\n    const [billTableState, setBillTableState] = React.useState(initBillTableState);\n\n    React.useEffect(() => observe((newBillTableState) => {setBillTableState(newBillTableState)}));\n\n    React.useEffect(() => {\n        const { pagination } = initBillTableState;\n        handleBillTableChange(pagination);\n    }, []);\n\n    function handleTableChange(pagination, filters, sorter) {\n        handleBillTableChange(pagination, filters, sorter, billTableState.query);\n    }\n\n    function handleDelete(id) {\n        // TODO id为什么变成对象?\n        reqwest({\n            url: 'api/bills/'+id.id,\n            method: 'delete',\n            success: (data) => {\n                if (data.success) {\n                    message.success('删除成功');\n                    const { pagination, filters, sorter } = billTableState;\n                    handleBillTableChange(pagination, filters, sorter);\n                } else {\n                    message.error('删除失败');\n                }\n            },\n            error: () => {\n                message.error('删除失败');\n            }\n        });\n        console.log(id);\n    }\n\n    return (\n        <>\n        <Alert\n            type=\"info\"\n            description = {\n                <p>支出总金额：<span style={{color: 'red'}}>{billTableState.out}</span>元；收入总金额：<span style={{color: 'green'}}>{billTableState.in}</span>元。</p>\n            }\n        />\n        <Table\n            columns={columns}\n            rowKey={record => record.id}\n            dataSource={billTableState.data}\n            pagination={billTableState.pagination}\n            loading={billTableState.loading}\n            onChange={handleTableChange}\n        />\n        </>\n    );\n\n}\n\n\nexport default BillTable;","import React from 'react';\nimport { Upload, Button, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport reqwest from 'reqwest';\nimport { observe, handleBillTableChange, initBillTableState } from './State'\n\nconst { Dragger } = Upload;\n\nconst BillUpload = () => {\n\n    const [billTableState, setBillTableState] = React.useState(initBillTableState);\n    const [fileList, setFileList] = React.useState([]);\n    const [uploading, setUploading] = React.useState(false);\n\n    React.useEffect(() => observe((newBillTableState) => {setBillTableState(newBillTableState)}));\n\n    function handleUpload() {\n        const formData = new FormData();\n        fileList.forEach(file => {\n            formData.append('files', file);\n        });\n        setUploading(true);\n        reqwest({\n            url: 'api/bills/upload',\n            method: 'post',\n            processData: false,\n            data: formData,\n            success: (data) => {\n                setUploading(false);\n                if (data.success) {\n                    message.success('上传成功');\n                    const { pagination, filters, sorter, query } = billTableState;\n                    handleBillTableChange(pagination, filters, sorter, query);\n                    setFileList([]);\n                } else {\n                    message.error('上传失败');\n                }\n            },\n            error: () => {\n                setUploading(false);\n                message.error('上传失败');\n            },\n        });\n    }\n\n    const props = {\n        name: 'files',\n        multiple: true,\n        accept: '.csv',\n        onRemove: file => {\n            const index = fileList.indexOf(file);\n            let newFileList = fileList.slice();\n            newFileList.splice(index, 1);\n            setFileList(newFileList);\n        },\n        beforeUpload: (newFile, newFileList) => {\n            setFileList([...fileList, ...newFileList]);\n            return false;\n        },\n        fileList,\n    };\n\n    return (\n        <div>\n            <Dragger {...props}>\n                <p className=\"ant-upload-drag-icon\">\n                    <InboxOutlined />\n                </p>\n                <p className=\"ant-upload-text\">将CSV文件拖到此区域，然后点击提交。</p>\n                <p className=\"ant-upload-hint\">\n                    支持一个或多个文件上传，只能上传固定的CSV文件，请下载模板文件参考。\n                </p>\n            </Dragger>\n\n            <Button\n                type=\"primary\"\n                onClick={handleUpload}\n                disabled={fileList.length === 0}\n                loading={uploading}\n                style={{ marginTop: 16 }}\n                >\n                {uploading ? '上传中...' : '开始上传'}\n            </Button>\n            <a href=\"bill.csv\" style={{ marginLeft: 16 }}>下载CSV模板文件</a>\n        </div>\n    );\n};\n\nexport default BillUpload;","import React from 'react';\nimport reqwest from 'reqwest';\nimport { Form, InputNumber, Select, Button, DatePicker, message } from 'antd';\nimport { observe, handleBillTableChange, initBillTableState } from './State'\nimport moment from 'moment';\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\n\nconst BillAddForm = () => {\n\n    const [form] = Form.useForm();\n\n    const [categories, setCategories] = React.useState([]);\n    const [billTableState, setBillTableState] = React.useState(initBillTableState);\n\n    React.useEffect(() => observe((newBillTableState) => {setBillTableState(newBillTableState)}));\n\n    React.useEffect(() => {\n        reqwest({\n            url: 'api/categories/',\n            method: 'get',\n            type: 'json'\n        }).then(data => {\n            setCategories(data.data)\n        });\n    }, []);\n\n    const onFinish = values => {\n        values.time = values.time.valueOf();\n        let jsonData = JSON.stringify(values);\n        reqwest({\n            url: 'api/bills/',\n            method: 'post',\n            contentType: 'application/json',\n            processData: false,\n            data: jsonData,\n            success: (data) => {\n                if (data.success) {\n                    message.success('添加成功');\n                    const { pagination, filters, sorter, query } = billTableState;\n                    handleBillTableChange(pagination, filters, sorter, query);\n                } else {\n                    message.error('添加失败');\n                }\n            },\n            error: () => {\n                message.error('添加失败');\n            }\n        });\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <Form\n            form={form}\n            {...layout}\n            name=\"billAddForm\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            initialValues={{\n                'type': 0,\n                'time': moment()\n            }}\n            >\n            <Form.Item\n                label=\"账单类型\"\n                name=\"type\"\n                rules={[{ required: true, message: '请选择账单类型!' }]}\n            >\n                <Select placeholder=\"请选择账单类型\">\n                    <Select.Option value={0}>支出</Select.Option>\n                    <Select.Option value={1}>收入</Select.Option>\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"time\"\n                label=\"账单时间\"\n                rules={[{ type: 'object', required: true, message: '请选择账单时间!' }]}\n            >\n                <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n            </Form.Item>\n            <Form.Item\n                label=\"账单类别\"\n                name=\"categoryId\"\n                rules={[{ required: true, message: '请选择账单类别!' }]}\n            >\n                <Select placeholder=\"请选择账单类别\">\n                    { categories.map((c, i) => {\n                        return (<Select.Option key={c.id} value={c.id}>{c.name}</Select.Option>)\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"amount\"\n                label=\"账单金额\"\n                rules={[{ required: true, message: '请选择账单类别!' }]}\n            >\n                <InputNumber min={0} step={0.1} precision={2} />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    新增账单\n                </Button>\n                <Button\n                    style={{ margin: '0 8px'}}\n                    onClick={() => {\n                        form.resetFields();\n                    }}\n                >\n                    重置\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default BillAddForm;","import React from 'react';\nimport reqwest from 'reqwest';\nimport { Form, InputNumber, Select, Button, DatePicker } from 'antd';\nimport { observe, handleBillTableChange, initBillTableState } from './State'\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\n\nconst BillSearchForm = () => {\n\n    const [form] = Form.useForm();\n\n    const [categories, setCategories] = React.useState([]);\n    const [billTableState, setBillTableState] = React.useState(initBillTableState);\n\n    React.useEffect(() => observe((newBillTableState) => {setBillTableState(newBillTableState)}));\n\n    React.useEffect(() => {\n        reqwest({\n            url: 'api/categories/',\n            method: 'get',\n            type: 'json'\n        }).then(data => {\n            setCategories(data.data)\n        });\n    }, []);\n\n    const onFinish = values => {\n        const { pagination, filters, sorter } = billTableState;\n        let query = {...values};\n        if (query.time) {\n            query['year'] = query.time.get('year');\n            query['month'] = query.time.get('month')+1;\n            delete query.time;\n        }\n        pagination['current'] = 1;\n        handleBillTableChange(pagination, filters, sorter, query);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <Form\n            form={form}\n            {...layout}\n            name=\"billSearchForm\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                label=\"账单类型\"\n                name=\"type\"\n            >\n                <Select placeholder=\"请选择账单类型\">\n                    <Select.Option value={0}>支出</Select.Option>\n                    <Select.Option value={1}>收入</Select.Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label=\"账单类别\"\n                name=\"categoryId\"\n            >\n                <Select placeholder=\"请选择账单类别\">\n                    { categories.map((c, i) => {\n                        return (<Select.Option key={c.id} value={c.id}>{c.name}</Select.Option>)\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"time\"\n                label=\"账单月份\"\n                >\n                <DatePicker picker=\"month\" format=\"YYYY-MM\" />\n            </Form.Item>\n            <Form.Item label=\"账单金额\">\n                <Form.Item name=\"minAmount\" style={{ display: 'inline-block'}}>\n                    <InputNumber min={0} step={0.1} precision={2} />\n                </Form.Item>\n                <span style={{ display: 'inline-block', width: '24px', lineHeight: '32px', textAlign: 'center' }}>\n                    -\n                </span>\n                <Form.Item name=\"maxAmount\" style={{ display: 'inline-block'}}>\n                    <InputNumber min={0} step={0.1} precision={2} />\n                </Form.Item>\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    查询账单\n                </Button>\n                <Button\n                    style={{ margin: '0 8px'}}\n                    onClick={() => {\n                        form.resetFields();\n                    }}\n                >\n                    重置\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default BillSearchForm;","import React from 'react';\nimport { Layout, Divider } from 'antd';\n\nimport BillTable from './BillTable';\nimport BillUpload from './BillUpload';\nimport BillAddForm from './BillAddForm';\nimport BillSearchForm from './BillSearchForm';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n\n\n\nconst App = () => {\n\n    return (\n        <>\n        <Layout>\n            <Header><h1>记账应用</h1></Header>\n            <Layout>\n                <Content>\n                    <BillTable />\n                </Content>\n                <Sider width={450}>\n                    <BillUpload />\n                    <Divider dashed={true} style={{borderColor: '#999'}} />\n                    <BillAddForm />\n                    <Divider dashed={true} style={{borderColor: '#999'}} />\n                    <BillSearchForm />\n                </Sider>\n            </Layout>\n            <Footer>Powered by me.</Footer>\n        </Layout>\n        </>\n    )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}